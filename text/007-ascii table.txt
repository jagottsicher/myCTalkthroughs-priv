Make it nice and neat: Prepare you your own ASCII table

Pic: nice and neat smiling















If you ever had no internet connection on a train or on a flight you may have missed to have a simple ASCII table at hand. The following one is easy to get carried away, but also not a cheapstaker when it comes to providing different numeric notations. 

Coding this such a table doesn’t require a lot of advanced C programming knowledge. Still, having a handy ASCII table is a necessary thing if you want to confirm code values or explore interesting ASCII tricks. And with that welcome to mycTalksthroughs.

Central to my solution is a for loop, though it goes only from 0 through 31 — one stick of an ASCII table. The loop contains four printf() statements, one for each stick.

#include <stdio.h>

int main()
{
    int x;

    printf("Dec  Oct  Hex  C   \
 Dec  Oct  Hex  C  \
 Dec  Oct  Hex  C  \
 Dec  Oct  Hex  C\n");
    for( x=0; x<32; x++ )
    {
        printf("%3d  %3o  %3x  - | ",
                x, x, x
              );
        printf("%3d  %3o  %3x  %c | ",
                x+32, x+32, x+32, x+32
              );
        printf("%3d  %3o  %3x  %c | ",
                x+64, x+64, x+64, x+64
              );
        printf("%3d  %3o  %3x  %c \n",
                x+96, x+96, x+96, x+96
              );
    }

    return(0);
}

The first printf() statement doesn’t output character values directly, as the control codes would foul the display. The second through fourth printf() statements increase the value output by 32 each time: +32, +64, and finally +96.

The initial printf() statement at Line 7, which outputs the header row, is split between lines. The backslash character extends the line, wrapping it around to the following line, but without an indent. The indent would become part of the string, which I don’t want. Still, be careful to mind the spaces required between the lines to ensure that the headings line up with the columns.

If you produce a simple executable and keep in your personal bin directory you can always summon an ASCII table I’m working.

For me this is a useful ASCII table solution. Remember, if you prefer your own solutions you are invited to code it at any time according to your personal needs and preferences.








